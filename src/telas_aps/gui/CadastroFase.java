/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas_aps.gui;

import br.com.aps.quarto.semestre.enumerated.TipoTela;
import br.com.aps.quarto.semestre.util.CaracteresPermitidos;
import br.com.aps.quarto.semestre.exception.ValorInvalidoException;
import br.com.aps.quarto.semestre.table.model.DialogoTableModel;
import br.com.aps.quarto.semestre.modelo.Combate;
import br.com.aps.quarto.semestre.modelo.Dialogo;
import br.com.aps.quarto.semestre.modelo.Fase;
import br.com.aps.quarto.semestre.modelo.Final;
import br.com.aps.quarto.semestre.modelo.Resposta;
import br.com.aps.quarto.semestre.modelo.TipoFase;
import br.com.aps.quarto.semestre.service.FaseService;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.ScrollPane;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import javafx.scene.control.ScrollBar;

import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author tsdev04
 */
public class CadastroFase extends javax.swing.JInternalFrame {

    private FaseService service = new FaseService();
    private Fase fase;
    private List<String> listTpFase = TipoFase.getValues();
    private DialogoTableModel dialogoModel = new DialogoTableModel();
    private List<Resposta> respostas;
    private Combate combate;
    private List<Dialogo> dialogos;
    private FaseService faseService;
    private TipoTela tipoTela;
    private ListaFase listaFaseForm;
    private ImageIcon imagemFase;
    
    /**
         * Creates new form Fase
     */
    public CadastroFase(Fase fase, ListaFase listaFaseForm) {
        setTipoTela(TipoTela.ALTERACAO);
        setListaFaseForm(listaFaseForm);
        
        initComponents();
        
        setValuesCbTipoFase();
        
        System.out.println(fase);
        
        
        setFase(fase);
        
        tbDialogo.setModel(dialogoModel);
        tbDialogo.getSelectionModel().addListSelectionListener(tbDialogoListner);
        
        setValores();
        
        txtPtnMinFinal.setDocument(new CaracteresPermitidos());
        txtPtnMaxFinal.setDocument(new CaracteresPermitidos());
        
        jScrollPane4.getVerticalScrollBar().setUnitIncrement(10);
    }
    
    public CadastroFase() {
        setTipoTela(TipoTela.CADASTRO);
        
        initComponents();
        
        setValuesCbTipoFase();
        
        tbDialogo.setModel(dialogoModel);
        tbDialogo.getSelectionModel().addListSelectionListener(tbDialogoListner);
        
        cbTipoFase.setSelectedIndex(0);
        
        // Essas linhas são responsaveis por tratar, rolamento de barra acelerado e em permitir campos aceitarem apenas valores numericos
        txtPtnMinFinal.setDocument(new CaracteresPermitidos());
        txtPtnMaxFinal.setDocument(new CaracteresPermitidos());
        
        jScrollPane4.getVerticalScrollBar().setUnitIncrement(10);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        labelImg = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnRemoverImg = new javax.swing.JButton();
        btnAdicionarImg = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescFase = new javax.swing.JTextArea();
        btnAddResp = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbTipoFase = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txtPtnMinFinal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPtnMaxFinal = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDialogo = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDialogo = new javax.swing.JTextArea();
        btnAddDialogo = new javax.swing.JButton();
        btnDelDialogo = new javax.swing.JButton();
        btnUpdDialogo = new javax.swing.JButton();
        btnSalvarFase = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Fase");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Imagem"));

        labelImg.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Palatino Linotype", 1, 16)); // NOI18N
        jLabel8.setText("Selecione uma imagem");

        btnRemoverImg.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnRemoverImg.setText("Remover");
        btnRemoverImg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoverImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverImgActionPerformed(evt);
            }
        });

        btnAdicionarImg.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnAdicionarImg.setText("Adicionar");
        btnAdicionarImg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarImgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelImg, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnAdicionarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemoverImg, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(83, 83, 83))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(labelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoverImg)
                    .addComponent(btnAdicionarImg))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalhe"));

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        jLabel1.setText("Descrição:");

        txtDescFase.setColumns(5);
        txtDescFase.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        txtDescFase.setLineWrap(true);
        txtDescFase.setRows(5);
        txtDescFase.setSelectionColor(new java.awt.Color(0, 255, 0));
        jScrollPane1.setViewportView(txtDescFase);

        btnAddResp.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnAddResp.setText("Respostas");
        btnAddResp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddResp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRespActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        jLabel3.setText("Tipo Fase:");

        cbTipoFase.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        cbTipoFase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbTipoFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoFaseActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        jLabel4.setText("Ponto Minimo:");

        txtPtnMinFinal.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        txtPtnMinFinal.setSelectionColor(new java.awt.Color(0, 255, 0));

        jLabel5.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        jLabel5.setText("Ponto Maximo:");

        txtPtnMaxFinal.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        txtPtnMaxFinal.setSelectionColor(new java.awt.Color(0, 255, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(txtPtnMinFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtPtnMaxFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                                .addComponent(btnAddResp, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(cbTipoFase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(cbTipoFase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPtnMinFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPtnMaxFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddResp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dialogos"));

        tbDialogo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        tbDialogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbDialogo.setSelectionBackground(new java.awt.Color(0, 200, 89));
        jScrollPane2.setViewportView(tbDialogo);

        jLabel6.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        jLabel6.setText("Texto Dialogo:");

        txtDialogo.setColumns(20);
        txtDialogo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 13)); // NOI18N
        txtDialogo.setLineWrap(true);
        txtDialogo.setRows(5);
        txtDialogo.setToolTipText("");
        txtDialogo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtDialogo.setSelectionColor(new java.awt.Color(0, 255, 0));
        jScrollPane3.setViewportView(txtDialogo);

        btnAddDialogo.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnAddDialogo.setText("Adicionar");
        btnAddDialogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDialogoActionPerformed(evt);
            }
        });

        btnDelDialogo.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnDelDialogo.setText("Remover");
        btnDelDialogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelDialogoActionPerformed(evt);
            }
        });

        btnUpdDialogo.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnUpdDialogo.setText("Alterar");
        btnUpdDialogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdDialogoActionPerformed(evt);
            }
        });

        btnSalvarFase.setFont(new java.awt.Font("Palatino Linotype", 1, 15)); // NOI18N
        btnSalvarFase.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvarFase.setLabel("Salvar");
        btnSalvarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarFaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(417, 417, 417)
                        .addComponent(btnAddDialogo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelDialogo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdDialogo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvarFase, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnUpdDialogo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelDialogo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddDialogo, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvarFase)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverImgActionPerformed
        labelImg.setIcon(null);
        jLabel8.setText("Selecione uma imagem");
    }//GEN-LAST:event_btnRemoverImgActionPerformed

    private void btnAdicionarImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarImgActionPerformed
       
        setImagemFase(selecionarImg());
        
        RedimensionarImagem resize = new RedimensionarImagem();
        labelImg.setIcon(getImagemFase());
        labelImg.setIcon(resize.redimensionar(labelImg, 342, 300));
        jLabel8.setText(null);
        
    }//GEN-LAST:event_btnAdicionarImgActionPerformed

    private void btnAddRespActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRespActionPerformed
        try{
            if(getTipoFase()==TipoFase.COMBATE){
                CadastroCombate cc = new CadastroCombate(getCombate(), this);
                cc.setVisible(true);
            }
            else{
                CadastroResposta cr = new CadastroResposta(getRespostas(), this);
                getParent().add(cr);
                cr.setVisible(true);
                
            }
        }catch(Exception e){
            showMsgErro("Erro ao abrir o formulário", e.getMessage());
        }
    }//GEN-LAST:event_btnAddRespActionPerformed

    private void cbTipoFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoFaseActionPerformed
        
        if(getTipoFase() == TipoFase.COMBATE){
            btnAddResp.setText("Combate");
            disableComponent(btnAddResp, true);
            disableComponent(txtPtnMaxFinal, false);
            disableComponent(txtPtnMinFinal, false);
        }
        else if(getTipoFase() == TipoFase.FINAL){
            disableComponent(btnAddResp, false);
            disableComponent(txtPtnMaxFinal, true);
            disableComponent(txtPtnMinFinal, true);
        }
        else{
            btnAddResp.setText("Resposta");
            disableComponent(btnAddResp, true);
            disableComponent(txtPtnMaxFinal, false);
            disableComponent(txtPtnMinFinal, false);
        }
    }//GEN-LAST:event_cbTipoFaseActionPerformed

    private void btnAddDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDialogoActionPerformed

        try{
            checkValoresDialogo();

            Dialogo d = new Dialogo();

            d.setTextDialogo(txtDialogo.getText());
            d.setFase(this.fase);

            dialogoModel.addRow(d);
        }catch(Exception e){
            showMsgErro("Erro ao adicionar o dialogo", "Causado por: "+e.getMessage());
        }
    }//GEN-LAST:event_btnAddDialogoActionPerformed

    private void btnDelDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelDialogoActionPerformed

        try{
            checkDialogoSelected();

            dialogoModel.removeRow(tbDialogo.getSelectedRow());
        }catch(Exception e){
            showMsgErro("Erro ao apagar o diálogo", "Causado por: " + e.getMessage());
        }
    }//GEN-LAST:event_btnDelDialogoActionPerformed

    private void btnUpdDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdDialogoActionPerformed
        try{
            checkDialogoSelected();
            checkValoresDialogo();

            Dialogo d = new Dialogo();
            d.setTextDialogo(txtDialogo.getText());

            dialogoModel.update(tbDialogo.getSelectedRow(), d);

        }catch(Exception e){
            showMsgErro("Erro ao alterar o dialogo", "Causado por: "+e.getMessage());
        }
    }//GEN-LAST:event_btnUpdDialogoActionPerformed

    private void btnSalvarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarFaseActionPerformed
        try{
            //obter os valores informados
            getValores();
            
            if(getTipoFase()==TipoFase.COMBATE){
                if(getTipoTela()==TipoTela.CADASTRO)
                    getService().save(getFase(), getDialogos(), getCombate());
                else
                    getService().update(getFase(), getDialogos(), getCombate());
            }
            
            else if(getTipoFase()==TipoFase.FINAL){
                if(getTipoTela() ==TipoTela.CADASTRO)
                    getService().save(getFim(), getDialogos());
                else
                   getService().update(getFim(), getDialogos());
            }
            else{
                if(getTipoTela() ==TipoTela.CADASTRO)
                    getService().save(getFase(), getDialogos(), getRespostas());
                else
                    getService().update(getFase(), getDialogos(), getRespostas());
            }
                
            showMsg("Sucesso", "Fase salva com sucesso!");
            
            if(getTipoTela() == TipoTela.ALTERACAO){
                //ATUALIZANDO A LISTA DE FASES PARA MOSTAR O QUE FOI ALTERADO
                getListaFaseForm().updateTable();
                //FECHANDO O FORMULÁRIO
                dispose();
            }
            else{
                //REINICIANDO O FORMULÁRIO PARA PODER FAZER UMA NOVA INSERÇÃO
                CadastroFase cd = new CadastroFase();
                cd.setVisible(true);
                getParent().add(cd);
                //FECHANDO O FORMULÁRIO ATUAL
                dispose();
            }
             
        }
        catch(ValorInvalidoException e){
            e.printStackTrace();
            showMsg("Erro ao salvar", e.getMessage());
        }
        catch(Exception e){
        	
        	if (getTipoTela()==TipoTela.CADASTRO) {
 				setFase(new Fase());
 			}
        	 
            e.printStackTrace();
            showMsgErro("Erro ao salvar", "Causado por: "+e.getMessage());
            
           
        }
    }//GEN-LAST:event_btnSalvarFaseActionPerformed

     private ListSelectionListener tbDialogoListner =  new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if(tbDialogo.getSelectedRow()>-1){
                Dialogo d = dialogoModel.getRowByIndex(tbDialogo.getSelectedRow());
                
                txtDialogo.setText(d.getTextDialogo());
            }
        }
    };
    private void setValuesCbTipoFase(){
        //Instanciando o DefaultComboBoxModel
        DefaultComboBoxModel defaultComboBox = new DefaultComboBoxModel(listTpFase.toArray());
        //passando os valores do "modelo" pro ComboBox
        cbTipoFase.setModel(defaultComboBox);
    }
    
    private void setIcon() {
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/telas_aps/gui/Imagem/code.png")));
    }

    /*
     -------------------------------------------------------------------------------
     GETS E SETS DO PROJETO
     -------------------------------------------------------------------------------
     */
    
    
    
    private FaseService getService(){
        if(this.faseService==null) faseService = new FaseService();
            
        return this.faseService;
    }
    
    public ImageIcon getImagemFase() {
		return imagemFase;
	}

	public void setImagemFase(ImageIcon imagemFase) {
		this.imagemFase = imagemFase;
	}

	private TipoFase getTipoFase(){
        return TipoFase.getTipoFaseByCod(cbTipoFase.getSelectedIndex());
    }

    public List<Resposta> getRespostas() {
        if(this.respostas == null) respostas = new ArrayList<>();
        return respostas;
    }

    public void setRespostas(List<Resposta> respostas) {
        this.respostas = respostas;
    }

    public Combate getCombate() {
        if(this.combate==null) combate = new Combate();
        
        return this.combate;
    }

    public void setCombate(Combate combate) {
        this.combate = combate;
    }

    public Fase getFase() {
        if(this.fase == null) fase = new Fase();
        
        return this.fase;
    }

    public void setFase(Fase fase) {
        if(getTipoTela()== TipoTela.ALTERACAO && (fase == null || fase.isNullOrEmpty()))
            throw new IllegalArgumentException("A tela foi aberta no modo ATUALIZACAO porem não foi informado a fase que seria atualizada,  reinicie a tela");
        if(getTipoTela() == TipoTela.ALTERACAO && fase.getIdFase() == null && fase.getIdFase() < 0)
            throw new IllegalArgumentException("A tela foi aberta no modo ATUALIZACAO porém a fase iformada não possui id, reinicie a tela");
        this.fase = fase;
    }

    public List<Dialogo> getDialogos() {
        if(dialogos == null) dialogos = new ArrayList<>();
        
        return dialogos;
    }

    public void setDialogos(List<Dialogo> dialogos) {
        this.dialogos = dialogos;
    }

    public TipoTela getTipoTela() {
        return tipoTela;
    }

    public void setTipoTela(TipoTela tipoTela) {
        this.tipoTela = tipoTela;
    }

    public Final getFim() {
        Final fim = Final.valueOf(getFase());
        
        fim.setIntervaloInf(Integer.valueOf(txtPtnMinFinal.getText()));
        fim.setIntervaloSup(Integer.valueOf(txtPtnMaxFinal.getText()));
        
        return fim;
    }

    public ListaFase getListaFaseForm() {
        return listaFaseForm;
    }

    public void setListaFaseForm(ListaFase listaFaseForm) {
        if(listaFaseForm == null)
            throw new ValorInvalidoException("O formulário ListaFase informado está nulo");
        this.listaFaseForm = listaFaseForm;
    }
    
    
    
    
    /*
    ---------------------------------------------------------------------------------
    MÉTODOS ÚTEIS PARA O FORMULÁRIO
    ---------------------------------------------------------------------------------
    */

    
    public void getValores() throws IOException{
        checkFase();
        
        getFase().setDsFase(txtDescFase.getText());
        getFase().setTipoFase(getTipoFase());
        getFase().setAtivo(true);
        
        if(getImagemFase()!=null) {
	        BufferedImage bi = getBufferedImage(getImagemFase().getImage());
	        ByteArrayOutputStream baos = new ByteArrayOutputStream();
	        ImageIO.write(bi, "png", baos);
	
	        byte[] byteArray= baos.toByteArray();
	        
	        getFase().setImagem(byteArray);
        }
        
        setDialogos(dialogoModel.getDialogos());
    }
    
    private void setValores(){
        txtDescFase.setText(getFase().getDsFase());
        
        cbTipoFase.setSelectedItem(getFase().getTipoFase().toString());
        
        if(getFase().getTipoFase()==TipoFase.FINAL){
             Final fim = getService().getFinalById(getFase().getIdFase());
             
             txtPtnMaxFinal.setText(String.valueOf(fim.getIntervaloSup()));
             txtPtnMinFinal.setText(String.valueOf(fim.getIntervaloInf()));
             
             cbTipoFase.setEnabled(false);
        }
        else if(getFase().getTipoFase()==TipoFase.COMBATE)
            setCombate(getService().getCombateByFase(getFase()));
        else
            setRespostas(getService().getRespostaByFase(getFase()));
        
        if(getFase().getTipoFase()!=TipoFase.FINAL) 
        	cbTipoFase.removeItem(TipoFase.FINAL.toString());
        
        
        setDialogos(getService().getDialogosByFase(getFase()));
        dialogoModel.setDialogos(getDialogos());
        
        if(getFase().getImagem()!=null) {
        	setImagemFase(byteImg(getFase().getImagem()));
        
        	BufferedImage bi = getBufferedImage(byteImg(getFase().getImagem()).getImage());
        
        	Image img = bi.getScaledInstance(342, 300,
                Image.SCALE_SMOOTH);
        
        	labelImg.setIcon(new ImageIcon(img));
        }
        
        
        System.out.println("dialogos: "+getDialogos().size());
        System.out.println("Respostas: "+getRespostas().size());
        System.out.println(getCombate());
    }
    
    public class RedimensionarImagem {
        
        public ImageIcon redimensionar(JLabel jLabel, int xLargura, int yAltura){
       
            ImageIcon img = new ImageIcon (jLabel.getIcon().toString());  
            img.setImage(img.getImage().getScaledInstance(xLargura, yAltura, 100));
       
            return img;
        }
    }
    
    private ImageIcon selecionarImg() {
        ImageIcon conteudo = null;
        String caminho = null;
        try {

            JFileChooser jFileChooser = new JFileChooser();

            int Aprovado = jFileChooser.showOpenDialog(null);

            if (Aprovado == JFileChooser.APPROVE_OPTION) {
                caminho = jFileChooser.getCurrentDirectory().getPath() + "\\" + jFileChooser.getSelectedFile().getName();
                conteudo = new ImageIcon(caminho);                
                System.out.println(conteudo);
            } else {
                jFileChooser.cancelSelection();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return conteudo;
    }
    
    private void showMsgErro(String titulo, String msg){
        JOptionPane.showMessageDialog( // Caixa de mensagem
		null, // Janela da aplicação (opcional, pode ser null)
		msg, // Mensagem
		titulo, // Título da caixa de mensagem
		JOptionPane.ERROR_MESSAGE // Ícone da caixa de mensagem
	);
    }
    
     private void showMsg(String titulo, String msg){
        JOptionPane.showMessageDialog( // Caixa de mensagem
		null, // Janela da aplicação (opcional, pode ser null)
		msg, // Mensagem
		titulo, // Título da caixa de mensagem
		JOptionPane.INFORMATION_MESSAGE // Ícone da caixa de mensagem
	);
    }
    
    private void checkValoresDialogo(){
        if(txtDialogo.getText().length()<=0)
            throw new ValorInvalidoException("Informe o texto do diálogo");
    }
    
    private void checkDialogoSelected() throws Exception{
        if(tbDialogo.getSelectedRow()<=-1)
            throw new Exception("Não existe nenhum dialogo selecionado, por favor selecione um para poder realizar a operação");
            
    }
    
    private void checkFase(){
        TipoFase tipoFase = TipoFase.getTipoFaseByCod(cbTipoFase.getSelectedIndex());
        
        if(tipoFase == TipoFase.FINAL && txtPtnMaxFinal.getText().length()<=0 && txtPtnMinFinal.getText().length()<=0)
            throw new ValorInvalidoException("O tipo de fase final exige que se informe o ponto máximo e o ponto mínimo");
        if(tipoFase == TipoFase.FINAL && (Integer.valueOf(txtPtnMaxFinal.getText().length())<Integer.valueOf(txtPtnMinFinal.getText().length())))
            throw new ValorInvalidoException("O ponto mínimo não pode ser maior que o ponto máximo");
    }

    private void disableComponent(JComponent component, boolean enable){
        component.setVisible(enable);
        component.setEnabled(enable);
    }
    
    public static BufferedImage getBufferedImage(Image img)
    {
        if (img instanceof BufferedImage)
        {
           return (BufferedImage) img;
        }

        BufferedImage bimage = new BufferedImage(img.getWidth(null), 
                        img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();

        // Return the buffered image
        return bimage;
    }
    
    public ImageIcon byteImg(byte[] i) {
        InputStream is = new ByteArrayInputStream(i);
        Image image = new ImageIcon(i).getImage();
        ImageIcon icon = new ImageIcon(image);
        return icon;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDialogo;
    private javax.swing.JButton btnAddResp;
    private javax.swing.JButton btnAdicionarImg;
    private javax.swing.JButton btnDelDialogo;
    private javax.swing.JButton btnRemoverImg;
    private javax.swing.JButton btnSalvarFase;
    private javax.swing.JButton btnUpdDialogo;
    private javax.swing.JComboBox cbTipoFase;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelImg;
    private javax.swing.JTable tbDialogo;
    private javax.swing.JTextArea txtDescFase;
    private javax.swing.JTextArea txtDialogo;
    private javax.swing.JTextField txtPtnMaxFinal;
    private javax.swing.JTextField txtPtnMinFinal;
    // End of variables declaration//GEN-END:variables
}
